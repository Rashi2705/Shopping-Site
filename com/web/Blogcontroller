package com.web;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.Date;
import java.util.List;
import java.util.Random;

import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;


//import jakarta.servlet.*;
//import jakarta.servlet.http.*;
import com.dao.UserDao;
import com.model.Blog;
import com.model.User;

import javax.servlet.RequestDispatcher;
@WebServlet("/Blogpost")
@MultipartConfig(maxFileSize = 162342)

/**
 * Servlet implementation class Blogcontroller
 */
public class Blogcontroller extends HttpServlet {
	private static final long serialVersionUID = 1L;
	 // location to store file uploaded
    private static final String UPLOAD_DIRECTORY = "C:\\Program Files\\Apache Software Foundation\\Tomcat 9.0_TOMCT9\\webapps\\uploads";
 
    // upload settings
    private static final int MEMORY_THRESHOLD   = 1024 * 1024 * 3;  // 3MB
    private static final int MAX_FILE_SIZE      = 1024 * 1024 * 40; // 40MB
    private static final int MAX_REQUEST_SIZE   = 1024 * 1024 * 50; // 50MB
 
	String Items =null;
	String Content = null;
	String Customer_names = null;
	String imagepath =null;
	String imagename =null;
	FileInputStream Image = null;
	
	private UserDao userDao;

    public void init() {
        userDao = new UserDao();
    } 
    public Blogcontroller() {
        super();
       
    }

	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
	}

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		boolean isMultiPartData = ServletFileUpload.isMultipartContent(request);
		if(isMultiPartData) {
			 if (!ServletFileUpload.isMultipartContent(request)) {
		            // if not, we stop here
		            PrintWriter writer = response.getWriter();
		            writer.println("Error: Form must has enctype=multipart/form-data.");
		            writer.flush();
		            return;
		        }
		 
		        // configures upload settings
		        DiskFileItemFactory factory = new DiskFileItemFactory();
		        // sets memory threshold - beyond which files are stored in disk
		        factory.setSizeThreshold(MEMORY_THRESHOLD);
		        // sets temporary location to store files
		   //     factory.setRepository(new File(System.getProperty("java.io.tmpdir")));
		 
		        ServletFileUpload upload = new ServletFileUpload(factory);
		         
		        // sets maximum size of upload file
		        upload.setFileSizeMax(MAX_FILE_SIZE);
		         
		        // sets maximum size of request (include file + form data)
		        upload.setSizeMax(MAX_REQUEST_SIZE);
			try {
				List<FileItem> items=upload.parseRequest(request);
				
				for(FileItem item:items) {
					if(item.isFormField())
					{
						String fieldname = item.getFieldName();
						if(fieldname.equals("Items"))
						{
							Items =item.getString();
						}
						else if(fieldname.equals("Content"))
						{
							Content =item.getString();
						}
						else if(fieldname.equals("Customer_names"))
						{
							Customer_names =item.getString();
						}
					}
					else {
						
						 String fileName = new File(item.getName()).getName();
	                        String filePath = UPLOAD_DIRECTORY + File.separator + fileName;
	                       request.setAttribute("message",
	                            "Upload has been done successfully!");
						imagepath=filePath;
						imagename=fileName;
						item.write(new File("C:\\Program Files\\Apache Software Foundation\\Tomcat 9.0_TOMCT9\\webapps\\uploads\\"+item.getName()));
					}
				}
				
			} catch (Exception e) {
				e.printStackTrace();
			}
			
		}else {
			System.out.println("its not a multipartdata");
		}
		
		
		
		 Blog blog = new Blog();
		 
		 blog.setBid(new Random().nextInt(100000));
		 blog.setItems( Items);		
		 blog.setContent(Content);
		 blog.setCustomer_name(Customer_names);
		blog.setDate(new Date());
		blog.setImagepath(imagepath);
	
		blog.setImagename(imagename);
	
	        userDao.saveBlog(blog);

	        RequestDispatcher dispatcher = request.getRequestDispatcher("Blogpost.jsp");
	       // fis.close();
	        dispatcher.forward(request, response);
		
	        
	}

}
